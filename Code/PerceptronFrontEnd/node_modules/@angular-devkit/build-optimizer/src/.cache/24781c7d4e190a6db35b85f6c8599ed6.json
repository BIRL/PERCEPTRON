{"remainingRequest":"D:\\01_PERCEPTRON\\gitHub\\PERCEPTRON\\Code\\PerceptronFrontEnd\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\01_PERCEPTRON\\gitHub\\PERCEPTRON\\Code\\PerceptronFrontEnd\\node_modules\\rxjs\\_esm5\\operators\\subscribeOn.js","dependencies":[{"path":"D:\\01_PERCEPTRON\\gitHub\\PERCEPTRON\\Code\\PerceptronFrontEnd\\node_modules\\rxjs\\_esm5\\operators\\subscribeOn.js","mtime":1577085432590},{"path":"D:\\01_PERCEPTRON\\gitHub\\PERCEPTRON\\Code\\PerceptronFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577085403617},{"path":"D:\\01_PERCEPTRON\\gitHub\\PERCEPTRON\\Code\\PerceptronFrontEnd\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1577085366146}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START .._observable_SubscribeOnObservable PURE_IMPORTS_END */\r\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\r\n/**\r\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\r\n *\r\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\r\n *\r\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\r\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\r\n .\r\n * @method subscribeOn\r\n * @owner Observable\r\n */\r\nexport function subscribeOn(scheduler, delay) {\r\n    if (delay === void 0) {\r\n        delay = 0;\r\n    }\r\n    return function subscribeOnOperatorFunction(source) {\r\n        return source.lift(new SubscribeOnOperator(scheduler, delay));\r\n    };\r\n}\r\nvar SubscribeOnOperator = /*@__PURE__*/ (function () {\r\n    function SubscribeOnOperator(scheduler, delay) {\r\n        this.scheduler = scheduler;\r\n        this.delay = delay;\r\n    }\r\n    SubscribeOnOperator.prototype.call = function (subscriber, source) {\r\n        return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);\r\n    };\r\n    return SubscribeOnOperator;\r\n}());\r\n//# sourceMappingURL=subscribeOn.js.map \r\n",null]}