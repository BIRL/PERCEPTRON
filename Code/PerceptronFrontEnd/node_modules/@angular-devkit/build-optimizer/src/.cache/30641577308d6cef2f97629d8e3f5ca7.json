{"remainingRequest":"E:\\01_PERCEPTRON\\GitHub\\Code\\PerceptronFrontEnd\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!E:\\01_PERCEPTRON\\GitHub\\Code\\PerceptronFrontEnd\\node_modules\\@firebase\\polyfill\\dist\\esm\\src\\shims\\findIndex.js","dependencies":[{"path":"E:\\01_PERCEPTRON\\GitHub\\Code\\PerceptronFrontEnd\\node_modules\\@firebase\\polyfill\\dist\\esm\\src\\shims\\findIndex.js","mtime":1532940266372},{"path":"E:\\01_PERCEPTRON\\GitHub\\Code\\PerceptronFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1532940271448},{"path":"E:\\01_PERCEPTRON\\GitHub\\Code\\PerceptronFrontEnd\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1532940256149}],"contextDependencies":[],"result":["/**\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This is the Array.prototype.findIndex polyfill from MDN\r\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex\r\n * https://tc39.github.io/ecma262/#sec-array.prototype.findIndex\r\n */\r\nif (!Array.prototype.findIndex) {\r\n    Object.defineProperty(Array.prototype, 'findIndex', {\r\n        value: function (predicate) {\r\n            // 1. Let O be ? ToObject(this value).\r\n            if (this == null) {\r\n                throw new TypeError('\"this\" is null or not defined');\r\n            }\r\n            var o = Object(this);\r\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\r\n            var len = o.length >>> 0;\r\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\r\n            if (typeof predicate !== 'function') {\r\n                throw new TypeError('predicate must be a function');\r\n            }\r\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\r\n            var thisArg = arguments[1];\r\n            // 5. Let k be 0.\r\n            var k = 0;\r\n            // 6. Repeat, while k < len\r\n            while (k < len) {\r\n                // a. Let Pk be ! ToString(k).\r\n                // b. Let kValue be ? Get(O, Pk).\r\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\r\n                // d. If testResult is true, return k.\r\n                var kValue = o[k];\r\n                if (predicate.call(thisArg, kValue, k, o)) {\r\n                    return k;\r\n                }\r\n                // e. Increase k by 1.\r\n                k++;\r\n            }\r\n            // 7. Return -1.\r\n            return -1;\r\n        }\r\n    });\r\n}\r\n\r\n//# sourceMappingURL=findIndex.js.map\r\n",null]}