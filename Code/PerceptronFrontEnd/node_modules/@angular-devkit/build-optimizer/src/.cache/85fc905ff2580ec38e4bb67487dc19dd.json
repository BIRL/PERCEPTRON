{"remainingRequest":"E:\\01_PERCEPTRON\\GitHub\\Code\\PerceptronFrontEnd\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!E:\\01_PERCEPTRON\\GitHub\\Code\\PerceptronFrontEnd\\node_modules\\rxjs\\_esm5\\operator\\subscribeOn.js","dependencies":[{"path":"E:\\01_PERCEPTRON\\GitHub\\Code\\PerceptronFrontEnd\\node_modules\\rxjs\\_esm5\\operator\\subscribeOn.js","mtime":1532940287342},{"path":"E:\\01_PERCEPTRON\\GitHub\\Code\\PerceptronFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1532940271448},{"path":"E:\\01_PERCEPTRON\\GitHub\\Code\\PerceptronFrontEnd\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1532940256149}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START .._operators_subscribeOn PURE_IMPORTS_END */\r\nimport { subscribeOn as higherOrder } from '../operators/subscribeOn';\r\n/**\r\n * Asynchronously subscribes Observers to this Observable on the specified IScheduler.\r\n *\r\n * <img src=\"./img/subscribeOn.png\" width=\"100%\">\r\n *\r\n * @param {Scheduler} scheduler - The IScheduler to perform subscription actions on.\r\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified IScheduler.\r\n .\r\n * @method subscribeOn\r\n * @owner Observable\r\n */\r\nexport function subscribeOn(scheduler, delay) {\r\n    if (delay === void 0) {\r\n        delay = 0;\r\n    }\r\n    return higherOrder(scheduler, delay)(this);\r\n}\r\n//# sourceMappingURL=subscribeOn.js.map \r\n",null]}