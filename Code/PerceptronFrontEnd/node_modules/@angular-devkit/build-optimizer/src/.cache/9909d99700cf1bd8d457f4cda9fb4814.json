{"remainingRequest":"D:\\01_PERCEPTRON\\gitHub\\PERCEPTRON\\Code\\PerceptronFrontEnd\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\01_PERCEPTRON\\gitHub\\PERCEPTRON\\Code\\PerceptronFrontEnd\\node_modules\\rxjs\\_esm5\\operators\\publishBehavior.js","dependencies":[{"path":"D:\\01_PERCEPTRON\\gitHub\\PERCEPTRON\\Code\\PerceptronFrontEnd\\node_modules\\rxjs\\_esm5\\operators\\publishBehavior.js","mtime":1577085432558},{"path":"D:\\01_PERCEPTRON\\gitHub\\PERCEPTRON\\Code\\PerceptronFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1577085403617},{"path":"D:\\01_PERCEPTRON\\gitHub\\PERCEPTRON\\Code\\PerceptronFrontEnd\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1577085366146}],"contextDependencies":[],"result":["/** PURE_IMPORTS_START .._BehaviorSubject,._multicast PURE_IMPORTS_END */\r\nimport { BehaviorSubject } from '../BehaviorSubject';\r\nimport { multicast } from './multicast';\r\n/**\r\n * @param value\r\n * @return {ConnectableObservable<T>}\r\n * @method publishBehavior\r\n * @owner Observable\r\n */\r\nexport function publishBehavior(value) {\r\n    return function (source) { return multicast(new BehaviorSubject(value))(source); };\r\n}\r\n//# sourceMappingURL=publishBehavior.js.map \r\n",null]}