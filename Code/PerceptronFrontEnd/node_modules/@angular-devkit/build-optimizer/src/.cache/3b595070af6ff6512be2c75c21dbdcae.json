{"remainingRequest":"E:\\01_PERCEPTRON\\~Code\\PERCEPTRON_v1.0.0.0\\PerceptronFrontEnd\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!E:\\01_PERCEPTRON\\~Code\\PERCEPTRON_v1.0.0.0\\PerceptronFrontEnd\\node_modules\\rxjs\\_esm5\\util\\UnsubscriptionError.js","dependencies":[{"path":"E:\\01_PERCEPTRON\\~Code\\PERCEPTRON_v1.0.0.0\\PerceptronFrontEnd\\node_modules\\rxjs\\_esm5\\util\\UnsubscriptionError.js","mtime":1532940287467},{"path":"E:\\01_PERCEPTRON\\~Code\\PERCEPTRON_v1.0.0.0\\PerceptronFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1532940271448},{"path":"E:\\01_PERCEPTRON\\~Code\\PERCEPTRON_v1.0.0.0\\PerceptronFrontEnd\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1532940256149}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\r\n/**\r\n * An error thrown when one or more errors have occurred during the\r\n * `unsubscribe` of a {@link Subscription}.\r\n */\r\nexport var UnsubscriptionError = /*@__PURE__*/ (function (_super) {\r\n    __extends(UnsubscriptionError, _super);\r\n    function UnsubscriptionError(errors) {\r\n        _super.call(this);\r\n        this.errors = errors;\r\n        var err = Error.call(this, errors ?\r\n            errors.length + \" errors occurred during unsubscription:\\n  \" + errors.map(function (err, i) { return ((i + 1) + \") \" + err.toString()); }).join('\\n  ') : '');\r\n        this.name = err.name = 'UnsubscriptionError';\r\n        this.stack = err.stack;\r\n        this.message = err.message;\r\n    }\r\n    return UnsubscriptionError;\r\n}(Error));\r\n//# sourceMappingURL=UnsubscriptionError.js.map \r\n",null]}