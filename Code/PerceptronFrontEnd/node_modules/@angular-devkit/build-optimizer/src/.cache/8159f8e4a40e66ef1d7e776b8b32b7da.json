{"remainingRequest":"D:\\~Code\\Perceptron\\PerceptronFrontEnd\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--3-1!D:\\~Code\\Perceptron\\PerceptronFrontEnd\\node_modules\\webpack-dev-server\\client\\overlay.js","dependencies":[{"path":"D:\\~Code\\Perceptron\\PerceptronFrontEnd\\node_modules\\webpack-dev-server\\client\\overlay.js","mtime":1532940290635},{"path":"D:\\~Code\\Perceptron\\PerceptronFrontEnd\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1532940271448},{"path":"D:\\~Code\\Perceptron\\PerceptronFrontEnd\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1532940256149}],"contextDependencies":[],"result":["'use strict';\r\n\r\n// The error overlay is inspired (and mostly copied) from Create React App (https://github.com/facebookincubator/create-react-app)\r\n// They, in turn, got inspired by webpack-hot-middleware (https://github.com/glenjamin/webpack-hot-middleware).\r\n\r\nvar ansiHTML = require('ansi-html');\r\nvar Entities = require('html-entities').AllHtmlEntities;\r\n\r\nvar entities = new Entities();\r\n\r\nvar colors = {\r\n  reset: ['transparent', 'transparent'],\r\n  black: '181818',\r\n  red: 'E36049',\r\n  green: 'B3CB74',\r\n  yellow: 'FFD080',\r\n  blue: '7CAFC2',\r\n  magenta: '7FACCA',\r\n  cyan: 'C3C2EF',\r\n  lightgrey: 'EBE7E3',\r\n  darkgrey: '6D7891'\r\n};\r\nansiHTML.setColors(colors);\r\n\r\nfunction createOverlayIframe(onIframeLoad) {\r\n  var iframe = document.createElement('iframe');\r\n  iframe.id = 'webpack-dev-server-client-overlay';\r\n  iframe.src = 'about:blank';\r\n  iframe.style.position = 'fixed';\r\n  iframe.style.left = 0;\r\n  iframe.style.top = 0;\r\n  iframe.style.right = 0;\r\n  iframe.style.bottom = 0;\r\n  iframe.style.width = '100vw';\r\n  iframe.style.height = '100vh';\r\n  iframe.style.border = 'none';\r\n  iframe.style.zIndex = 9999999999;\r\n  iframe.onload = onIframeLoad;\r\n  return iframe;\r\n}\r\n\r\nfunction addOverlayDivTo(iframe) {\r\n  var div = iframe.contentDocument.createElement('div');\r\n  div.id = 'webpack-dev-server-client-overlay-div';\r\n  div.style.position = 'fixed';\r\n  div.style.boxSizing = 'border-box';\r\n  div.style.left = 0;\r\n  div.style.top = 0;\r\n  div.style.right = 0;\r\n  div.style.bottom = 0;\r\n  div.style.width = '100vw';\r\n  div.style.height = '100vh';\r\n  div.style.backgroundColor = 'rgba(0, 0, 0, 0.85)';\r\n  div.style.color = '#E8E8E8';\r\n  div.style.fontFamily = 'Menlo, Consolas, monospace';\r\n  div.style.fontSize = 'large';\r\n  div.style.padding = '2rem';\r\n  div.style.lineHeight = '1.2';\r\n  div.style.whiteSpace = 'pre-wrap';\r\n  div.style.overflow = 'auto';\r\n  iframe.contentDocument.body.appendChild(div);\r\n  return div;\r\n}\r\n\r\nvar overlayIframe = null;\r\nvar overlayDiv = null;\r\nvar lastOnOverlayDivReady = null;\r\n\r\nfunction ensureOverlayDivExists(onOverlayDivReady) {\r\n  if (overlayDiv) {\r\n    // Everything is ready, call the callback right away.\r\n    onOverlayDivReady(overlayDiv);\r\n    return;\r\n  }\r\n\r\n  // Creating an iframe may be asynchronous so we'll schedule the callback.\r\n  // In case of multiple calls, last callback wins.\r\n  lastOnOverlayDivReady = onOverlayDivReady;\r\n\r\n  if (overlayIframe) {\r\n    // We're already creating it.\r\n    return;\r\n  }\r\n\r\n  // Create iframe and, when it is ready, a div inside it.\r\n  overlayIframe = createOverlayIframe(function () {\r\n    overlayDiv = addOverlayDivTo(overlayIframe);\r\n    // Now we can talk!\r\n    lastOnOverlayDivReady(overlayDiv);\r\n  });\r\n\r\n  // Zalgo alert: onIframeLoad() will be called either synchronously\r\n  // or asynchronously depending on the browser.\r\n  // We delay adding it so `overlayIframe` is set when `onIframeLoad` fires.\r\n  document.body.appendChild(overlayIframe);\r\n}\r\n\r\nfunction showMessageOverlay(message) {\r\n  ensureOverlayDivExists(function (div) {\r\n    // Make it look similar to our terminal.\r\n    div.innerHTML = '<span style=\"color: #' + colors.red + '\">Failed to compile.</span><br><br>' + ansiHTML(entities.encode(message));\r\n  });\r\n}\r\n\r\nfunction destroyErrorOverlay() {\r\n  if (!overlayDiv) {\r\n    // It is not there in the first place.\r\n    return;\r\n  }\r\n\r\n  // Clean up and reset internal state.\r\n  document.body.removeChild(overlayIframe);\r\n  overlayDiv = null;\r\n  overlayIframe = null;\r\n  lastOnOverlayDivReady = null;\r\n}\r\n\r\n// Successful compilation.\r\nexports.clear = function handleSuccess() {\r\n  destroyErrorOverlay();\r\n};\r\n\r\n// Compilation with errors (e.g. syntax error or missing modules).\r\nexports.showMessage = function handleMessage(messages) {\r\n  showMessageOverlay(messages[0]);\r\n};",null]}